@using Microsoft.AspNetCore.Components.Forms
@using TextLore.Models

@rendermode InteractiveServer

<div id="console">
    <div id="header">
        <h4>@Name</h4>
        @if (ShowDate)
        {
            <h5> @DateTime.UtcNow.ToLongDateString()</h5>
        }
        <h6>> @Description</h6>
    </div>
    <div id="container">
        <EditForm OnValidSubmit="Execute" OnInvalidSubmit="Execute" autocomplete="off" Model="ConsoleInput" novalidate>
            <div id="input-line" class="input-line">
                <div class="prompt">
                    Command >
                </div>
                <div>
                    <InputText id="commandline" autocomplete="off" class="cmdline" disabled="@Disabled" placeholder="@Placeholder" @bind-Value="@ConsoleInput.Text" />
                </div>
            </div>
        </EditForm>
        <pre>
        <code>@((MarkupString)Running)</code>
        <code>@((MarkupString)Output)</code>
        </pre>
    </div>
</div>

@code {
    public string Output { get; set; } = "";
    public string Running { get; set; } = "";
    public string Name { get; set; } = "Main Menu";
    public string Description { get; set; } = "Select a game mode";
    public bool ShowDate { get; set; } = true;
    public bool Disabled { get; set; } = false;
    public string Placeholder { get; set; } = "Enter a command, type 'help' for avaliable commands.";
    public ConsoleInput ConsoleInput { get; set; } = new ConsoleInput();

    public void Execute(EditContext context)
    {
        Disabled = true;
        Running = ConsoleInput.Text;
        string newOutput = $"<p>";
        newOutput += $"<span class='header'>{DateTime.UtcNow.ToString("HH:mm")} > </span><span class='command'>{ConsoleInput.Text}{Environment.NewLine}</span>";
        newOutput += $"1+1=3";
        newOutput += $"</p>";
        Output = newOutput + Output;
        ConsoleInput.Text = "";
        Disabled = false;
    }
}